
// generated by `node generate_opcodes.js` 
if (!prefixed) {
    switch(instr) {

        case 0x40: // LD B B [----]
            this.B = this.B
            break
        case 0x41: // LD B C [----]
            this.B = this.C
            break
        case 0x42: // LD B D [----]
            this.B = this.D
            break
        case 0x43: // LD B E [----]
            this.B = this.E
            break
        case 0x44: // LD B H [----]
            this.B = this.H
            break
        case 0x45: // LD B L [----]
            this.B = this.L
            break
        case 0x46: // LD B (HL) [----]
            this.ld_r8_valHL(R8.B)
            break
        case 0x47: // LD B A [----]
            this.B = this.A
            break

        case 0x48: // LD C B [----]
            this.C = this.B
            break
        case 0x49: // LD C C [----]
            this.C = this.C
            break
        case 0x4a: // LD C D [----]
            this.C = this.D
            break
        case 0x4b: // LD C E [----]
            this.C = this.E
            break
        case 0x4c: // LD C H [----]
            this.C = this.H
            break
        case 0x4d: // LD C L [----]
            this.C = this.L
            break
        case 0x4e: // LD C (HL) [----]
            this.ld_r8_valHL(R8.C)
            break
        case 0x4f: // LD C A [----]
            this.C = this.A
            break



        case 0x50: // LD D B [----]
            this.D = this.B
            break
        case 0x51: // LD D C [----]
            this.D = this.C
            break
        case 0x52: // LD D D [----]
            this.D = this.D
            break
        case 0x53: // LD D E [----]
            this.D = this.E
            break
        case 0x54: // LD D H [----]
            this.D = this.H
            break
        case 0x55: // LD D L [----]
            this.D = this.L
            break
        case 0x56: // LD D (HL) [----]
            this.ld_r8_valHL(R8.D)
            break
        case 0x57: // LD D A [----]
            this.D = this.A
            break

        case 0x58: // LD E B [----]
            this.E = this.B
            break
        case 0x59: // LD E C [----]
            this.E = this.C
            break
        case 0x5a: // LD E D [----]
            this.E = this.D
            break
        case 0x5b: // LD E E [----]
            this.E = this.E
            break
        case 0x5c: // LD E H [----]
            this.E = this.H
            break
        case 0x5d: // LD E L [----]
            this.E = this.L
            break
        case 0x5e: // LD E (HL) [----]
            this.ld_r8_valHL(R8.E)
            break
        case 0x5f: // LD E A [----]
            this.E = this.A
            break



        case 0x60: // LD H B [----]
            this.H = this.B
            break
        case 0x61: // LD H C [----]
            this.H = this.C
            break
        case 0x62: // LD H D [----]
            this.H = this.D
            break
        case 0x63: // LD H E [----]
            this.H = this.E
            break
        case 0x64: // LD H H [----]
            this.H = this.H
            break
        case 0x65: // LD H L [----]
            this.H = this.L
            break
        case 0x66: // LD H (HL) [----]
            this.ld_r8_valHL(R8.H)
            break
        case 0x67: // LD H A [----]
            this.H = this.A
            break

        case 0x68: // LD L B [----]
            this.L = this.B
            break
        case 0x69: // LD L C [----]
            this.L = this.C
            break
        case 0x6a: // LD L D [----]
            this.L = this.D
            break
        case 0x6b: // LD L E [----]
            this.L = this.E
            break
        case 0x6c: // LD L H [----]
            this.L = this.H
            break
        case 0x6d: // LD L L [----]
            this.L = this.L
            break
        case 0x6e: // LD L (HL) [----]
            this.ld_r8_valHL(R8.L)
            break
        case 0x6f: // LD L A [----]
            this.L = this.A
            break



        case 0x70: // LD (HL) B [----]
            this.ld_valHL_r8(R8.B)
            break
        case 0x71: // LD (HL) C [----]
            this.ld_valHL_r8(R8.C)
            break
        case 0x72: // LD (HL) D [----]
            this.ld_valHL_r8(R8.D)
            break
        case 0x73: // LD (HL) E [----]
            this.ld_valHL_r8(R8.E)
            break
        case 0x74: // LD (HL) H [----]
            this.ld_valHL_r8(R8.H)
            break
        case 0x75: // LD (HL) L [----]
            this.ld_valHL_r8(R8.L)
            break
        case 0x76: // HALT   [----]
            this.halted = true
            break
        case 0x77: // LD (HL) A [----]
            this.ld_valHL_r8(R8.A)
            break

        case 0x78: // LD A B [----]
            this.A = this.B
            break
        case 0x79: // LD A C [----]
            this.A = this.C
            break
        case 0x7a: // LD A D [----]
            this.A = this.D
            break
        case 0x7b: // LD A E [----]
            this.A = this.E
            break
        case 0x7c: // LD A H [----]
            this.A = this.H
            break
        case 0x7d: // LD A L [----]
            this.A = this.L
            break
        case 0x7e: // LD A (HL) [----]
            this.ld_r8_valHL(R8.A)
            break
        case 0x7f: // LD A A [----]
            this.A = this.A
            break



        case 0x80: // ADD A B [Z0HC]
            this.add(this.B)
            break
        case 0x81: // ADD A C [Z0HC]
            this.add(this.C)
            break
        case 0x82: // ADD A D [Z0HC]
            this.add(this.D)
            break
        case 0x83: // ADD A E [Z0HC]
            this.add(this.E)
            break
        case 0x84: // ADD A H [Z0HC]
            this.add(this.H)
            break
        case 0x85: // ADD A L [Z0HC]
            this.add(this.L)
            break
        case 0x86: // ADD A (HL) [Z0HC]
            this.add(this.mmu.rb(this.getHL()))
            break
        case 0x87: // ADD A A [Z0HC]
            this.add(this.A)
            break

        case 0x88: // ADC A B [Z0HC]
            this.adc(this.B)
            break
        case 0x89: // ADC A C [Z0HC]
            this.adc(this.C)
            break
        case 0x8a: // ADC A D [Z0HC]
            this.adc(this.D)
            break
        case 0x8b: // ADC A E [Z0HC]
            this.adc(this.E)
            break
        case 0x8c: // ADC A H [Z0HC]
            this.adc(this.H)
            break
        case 0x8d: // ADC A L [Z0HC]
            this.adc(this.L)
            break
        case 0x8e: // ADC A (HL) [Z0HC]
            this.adc(this.mmu.rb(this.getHL()))
            break
        case 0x8f: // ADC A A [Z0HC]
            this.adc(this.A)
            break



        case 0x90: // SUB B  [Z1HC]
            this.sub(this.B)
            break
        case 0x91: // SUB C  [Z1HC]
            this.sub(this.C)
            break
        case 0x92: // SUB D  [Z1HC]
            this.sub(this.D)
            break
        case 0x93: // SUB E  [Z1HC]
            this.sub(this.E)
            break
        case 0x94: // SUB H  [Z1HC]
            this.sub(this.H)
            break
        case 0x95: // SUB L  [Z1HC]
            this.sub(this.L)
            break
        case 0x96: // SUB (HL)  [Z1HC]
            this.sub(this.mmu.rb(this.getHL()))
            break
        case 0x97: // SUB A  [Z1HC]
            this.sub(this.A)
            break

        case 0x98: // SBC A B [Z1HC]
            this.sbc(this.A)
            break
        case 0x99: // SBC A C [Z1HC]
            this.sbc(this.A)
            break
        case 0x9a: // SBC A D [Z1HC]
            this.sbc(this.A)
            break
        case 0x9b: // SBC A E [Z1HC]
            this.sbc(this.A)
            break
        case 0x9c: // SBC A H [Z1HC]
            this.sbc(this.A)
            break
        case 0x9d: // SBC A L [Z1HC]
            this.sbc(this.A)
            break
        case 0x9e: // SBC A (HL) [Z1HC]
            this.sbc(this.A)
            break
        case 0x9f: // SBC A A [Z1HC]
            this.sbc(this.A)
            break



        case 0xa0: // AND B  [Z010]
            this.and(this.B)
            break
        case 0xa1: // AND C  [Z010]
            this.and(this.C)
            break
        case 0xa2: // AND D  [Z010]
            this.and(this.D)
            break
        case 0xa3: // AND E  [Z010]
            this.and(this.E)
            break
        case 0xa4: // AND H  [Z010]
            this.and(this.H)
            break
        case 0xa5: // AND L  [Z010]
            this.and(this.L)
            break
        case 0xa6: // AND (HL)  [Z010]
            this.and(this.mmu.rb(this.getHL()))
            break
        case 0xa7: // AND A  [Z010]
            this.and(this.A)
            break

        case 0xa8: // XOR B  [Z000]
            this.xor(this.B)
            break
        case 0xa9: // XOR C  [Z000]
            this.xor(this.C)
            break
        case 0xaa: // XOR D  [Z000]
            this.xor(this.D)
            break
        case 0xab: // XOR E  [Z000]
            this.xor(this.E)
            break
        case 0xac: // XOR H  [Z000]
            this.xor(this.H)
            break
        case 0xad: // XOR L  [Z000]
            this.xor(this.L)
            break
        case 0xae: // XOR (HL)  [Z000]
            this.xor(this.mmu.rb(this.getHL()))
            break
        case 0xaf: // XOR A  [Z000]
            this.xor(this.A)
            break



        case 0xb0: // OR B  [Z000]
            this.or(this.B)
            break
        case 0xb1: // OR C  [Z000]
            this.or(this.C)
            break
        case 0xb2: // OR D  [Z000]
            this.or(this.D)
            break
        case 0xb3: // OR E  [Z000]
            this.or(this.E)
            break
        case 0xb4: // OR H  [Z000]
            this.or(this.H)
            break
        case 0xb5: // OR L  [Z000]
            this.or(this.L)
            break
        case 0xb6: // OR (HL)  [Z000]
            this.or(this.mmu.rb(this.getHL()))
            break
        case 0xb7: // OR A  [Z000]
            this.or(this.A)
            break

        case 0xb8: // CP B  [Z1HC]
            this.cp(this.B)
            break
        case 0xb9: // CP C  [Z1HC]
            this.cp(this.C)
            break
        case 0xba: // CP D  [Z1HC]
            this.cp(this.D)
            break
        case 0xbb: // CP E  [Z1HC]
            this.cp(this.E)
            break
        case 0xbc: // CP H  [Z1HC]
            this.cp(this.H)
            break
        case 0xbd: // CP L  [Z1HC]
            this.cp(this.L)
            break
        case 0xbe: // CP (HL)  [Z1HC]
            this.cp(this.mmu.rb(this.getHL()))
            break
        case 0xbf: // CP A  [Z1HC]
            this.cp(this.A)
            break



    }

} else {
    switch(instr) {

        case 0x0: // RLC B  [Z00C]
            this.rlc_r8(R8.B)
            break
        case 0x1: // RLC C  [Z00C]
            this.rlc_r8(R8.C)
            break
        case 0x2: // RLC D  [Z00C]
            this.rlc_r8(R8.D)
            break
        case 0x3: // RLC E  [Z00C]
            this.rlc_r8(R8.E)
            break
        case 0x4: // RLC H  [Z00C]
            this.rlc_r8(R8.H)
            break
        case 0x5: // RLC L  [Z00C]
            this.rlc_r8(R8.L)
            break
        case 0x6: // RLC (HL)  [Z00C]
            this.rlc_valHL()
            break
        case 0x7: // RLC A  [Z00C]
            this.rlc_r8(R8.A)
            break

        case 0x8: // RRC B  [Z00C]
            this.rrc_r8(R8.B)
            break
        case 0x9: // RRC C  [Z00C]
            this.rrc_r8(R8.C)
            break
        case 0xa: // RRC D  [Z00C]
            this.rrc_r8(R8.D)
            break
        case 0xb: // RRC E  [Z00C]
            this.rrc_r8(R8.E)
            break
        case 0xc: // RRC H  [Z00C]
            this.rrc_r8(R8.H)
            break
        case 0xd: // RRC L  [Z00C]
            this.rrc_r8(R8.L)
            break
        case 0xe: // RRC (HL)  [Z00C]
            this.rrc_valHL()
            break
        case 0xf: // RRC A  [Z00C]
            this.rrc_r8(R8.A)
            break



        case 0x10: // RL B  [Z00C]
            this.rl_r8(R8.B)
            break
        case 0x11: // RL C  [Z00C]
            this.rl_r8(R8.C)
            break
        case 0x12: // RL D  [Z00C]
            this.rl_r8(R8.D)
            break
        case 0x13: // RL E  [Z00C]
            this.rl_r8(R8.E)
            break
        case 0x14: // RL H  [Z00C]
            this.rl_r8(R8.H)
            break
        case 0x15: // RL L  [Z00C]
            this.rl_r8(R8.L)
            break
        case 0x16: // RL (HL)  [Z00C]
            this.rl_valHL()
            break
        case 0x17: // RL A  [Z00C]
            this.rl_r8(R8.A)
            break

        case 0x18: // RR B  [Z00C]
            this.rr_r8(R8.B)
            break
        case 0x19: // RR C  [Z00C]
            this.rr_r8(R8.C)
            break
        case 0x1a: // RR D  [Z00C]
            this.rr_r8(R8.D)
            break
        case 0x1b: // RR E  [Z00C]
            this.rr_r8(R8.E)
            break
        case 0x1c: // RR H  [Z00C]
            this.rr_r8(R8.H)
            break
        case 0x1d: // RR L  [Z00C]
            this.rr_r8(R8.L)
            break
        case 0x1e: // RR (HL)  [Z00C]
            this.rr_valHL()
            break
        case 0x1f: // RR A  [Z00C]
            this.rr_r8(R8.A)
            break



        case 0x20: // SLA B  [Z00C]
            this.sla_r8(R8.B)
            break
        case 0x21: // SLA C  [Z00C]
            this.sla_r8(R8.C)
            break
        case 0x22: // SLA D  [Z00C]
            this.sla_r8(R8.D)
            break
        case 0x23: // SLA E  [Z00C]
            this.sla_r8(R8.E)
            break
        case 0x24: // SLA H  [Z00C]
            this.sla_r8(R8.H)
            break
        case 0x25: // SLA L  [Z00C]
            this.sla_r8(R8.L)
            break
        case 0x26: // SLA (HL)  [Z00C]
            this.sla_valHL()
            break
        case 0x27: // SLA A  [Z00C]
            this.sla_r8(R8.A)
            break

        case 0x28: // SRA B  [Z000]
            this.sra_r8(R8.B)
            break
        case 0x29: // SRA C  [Z000]
            this.sra_r8(R8.C)
            break
        case 0x2a: // SRA D  [Z000]
            this.sra_r8(R8.D)
            break
        case 0x2b: // SRA E  [Z000]
            this.sra_r8(R8.E)
            break
        case 0x2c: // SRA H  [Z000]
            this.sra_r8(R8.H)
            break
        case 0x2d: // SRA L  [Z000]
            this.sra_r8(R8.L)
            break
        case 0x2e: // SRA (HL)  [Z000]
            this.sra_valHL()
            break
        case 0x2f: // SRA A  [Z000]
            this.sra_r8(R8.A)
            break



        case 0x30: // SWAP B  [Z000]
            this.swap_r8(R8.B)
            break
        case 0x31: // SWAP C  [Z000]
            this.swap_r8(R8.C)
            break
        case 0x32: // SWAP D  [Z000]
            this.swap_r8(R8.D)
            break
        case 0x33: // SWAP E  [Z000]
            this.swap_r8(R8.E)
            break
        case 0x34: // SWAP H  [Z000]
            this.swap_r8(R8.H)
            break
        case 0x35: // SWAP L  [Z000]
            this.swap_r8(R8.L)
            break
        case 0x36: // SWAP (HL)  [Z000]
            this.swap_valHL()
            break
        case 0x37: // SWAP A  [Z000]
            this.swap_r8(R8.A)
            break

        case 0x38: // SRL B  [Z00C]
            this.srl_r8(R8.B)
            break
        case 0x39: // SRL C  [Z00C]
            this.srl_r8(R8.C)
            break
        case 0x3a: // SRL D  [Z00C]
            this.srl_r8(R8.D)
            break
        case 0x3b: // SRL E  [Z00C]
            this.srl_r8(R8.E)
            break
        case 0x3c: // SRL H  [Z00C]
            this.srl_r8(R8.H)
            break
        case 0x3d: // SRL L  [Z00C]
            this.srl_r8(R8.L)
            break
        case 0x3e: // SRL (HL)  [Z00C]
            this.srl_valHL()
            break
        case 0x3f: // SRL A  [Z00C]
            this.srl_r8(R8.A)
            break



        case 0x40: // BIT 0 B [Z01-]
            this.bit_n_r8(0, R8.B)
            break
        case 0x41: // BIT 0 C [Z01-]
            this.bit_n_r8(0, R8.C)
            break
        case 0x42: // BIT 0 D [Z01-]
            this.bit_n_r8(0, R8.D)
            break
        case 0x43: // BIT 0 E [Z01-]
            this.bit_n_r8(0, R8.E)
            break
        case 0x44: // BIT 0 H [Z01-]
            this.bit_n_r8(0, R8.H)
            break
        case 0x45: // BIT 0 L [Z01-]
            this.bit_n_r8(0, R8.L)
            break
        case 0x46: // BIT 0 (HL) [Z01-]
            this.bit_n_valHL(0)
            break
        case 0x47: // BIT 0 A [Z01-]
            this.bit_n_r8(0, R8.A)
            break

        case 0x48: // BIT 1 B [Z01-]
            this.bit_n_r8(1, R8.B)
            break
        case 0x49: // BIT 1 C [Z01-]
            this.bit_n_r8(1, R8.C)
            break
        case 0x4a: // BIT 1 D [Z01-]
            this.bit_n_r8(1, R8.D)
            break
        case 0x4b: // BIT 1 E [Z01-]
            this.bit_n_r8(1, R8.E)
            break
        case 0x4c: // BIT 1 H [Z01-]
            this.bit_n_r8(1, R8.H)
            break
        case 0x4d: // BIT 1 L [Z01-]
            this.bit_n_r8(1, R8.L)
            break
        case 0x4e: // BIT 1 (HL) [Z01-]
            this.bit_n_valHL(1)
            break
        case 0x4f: // BIT 1 A [Z01-]
            this.bit_n_r8(1, R8.A)
            break



        case 0x50: // BIT 2 B [Z01-]
            this.bit_n_r8(2, R8.B)
            break
        case 0x51: // BIT 2 C [Z01-]
            this.bit_n_r8(2, R8.C)
            break
        case 0x52: // BIT 2 D [Z01-]
            this.bit_n_r8(2, R8.D)
            break
        case 0x53: // BIT 2 E [Z01-]
            this.bit_n_r8(2, R8.E)
            break
        case 0x54: // BIT 2 H [Z01-]
            this.bit_n_r8(2, R8.H)
            break
        case 0x55: // BIT 2 L [Z01-]
            this.bit_n_r8(2, R8.L)
            break
        case 0x56: // BIT 2 (HL) [Z01-]
            this.bit_n_valHL(2)
            break
        case 0x57: // BIT 2 A [Z01-]
            this.bit_n_r8(2, R8.A)
            break

        case 0x58: // BIT 3 B [Z01-]
            this.bit_n_r8(3, R8.B)
            break
        case 0x59: // BIT 3 C [Z01-]
            this.bit_n_r8(3, R8.C)
            break
        case 0x5a: // BIT 3 D [Z01-]
            this.bit_n_r8(3, R8.D)
            break
        case 0x5b: // BIT 3 E [Z01-]
            this.bit_n_r8(3, R8.E)
            break
        case 0x5c: // BIT 3 H [Z01-]
            this.bit_n_r8(3, R8.H)
            break
        case 0x5d: // BIT 3 L [Z01-]
            this.bit_n_r8(3, R8.L)
            break
        case 0x5e: // BIT 3 (HL) [Z01-]
            this.bit_n_valHL(3)
            break
        case 0x5f: // BIT 3 A [Z01-]
            this.bit_n_r8(3, R8.A)
            break



        case 0x60: // BIT 4 B [Z01-]
            this.bit_n_r8(4, R8.B)
            break
        case 0x61: // BIT 4 C [Z01-]
            this.bit_n_r8(4, R8.C)
            break
        case 0x62: // BIT 4 D [Z01-]
            this.bit_n_r8(4, R8.D)
            break
        case 0x63: // BIT 4 E [Z01-]
            this.bit_n_r8(4, R8.E)
            break
        case 0x64: // BIT 4 H [Z01-]
            this.bit_n_r8(4, R8.H)
            break
        case 0x65: // BIT 4 L [Z01-]
            this.bit_n_r8(4, R8.L)
            break
        case 0x66: // BIT 4 (HL) [Z01-]
            this.bit_n_valHL(4)
            break
        case 0x67: // BIT 4 A [Z01-]
            this.bit_n_r8(4, R8.A)
            break

        case 0x68: // BIT 5 B [Z01-]
            this.bit_n_r8(5, R8.B)
            break
        case 0x69: // BIT 5 C [Z01-]
            this.bit_n_r8(5, R8.C)
            break
        case 0x6a: // BIT 5 D [Z01-]
            this.bit_n_r8(5, R8.D)
            break
        case 0x6b: // BIT 5 E [Z01-]
            this.bit_n_r8(5, R8.E)
            break
        case 0x6c: // BIT 5 H [Z01-]
            this.bit_n_r8(5, R8.H)
            break
        case 0x6d: // BIT 5 L [Z01-]
            this.bit_n_r8(5, R8.L)
            break
        case 0x6e: // BIT 5 (HL) [Z01-]
            this.bit_n_valHL(5)
            break
        case 0x6f: // BIT 5 A [Z01-]
            this.bit_n_r8(5, R8.A)
            break



        case 0x70: // BIT 6 B [Z01-]
            this.bit_n_r8(6, R8.B)
            break
        case 0x71: // BIT 6 C [Z01-]
            this.bit_n_r8(6, R8.C)
            break
        case 0x72: // BIT 6 D [Z01-]
            this.bit_n_r8(6, R8.D)
            break
        case 0x73: // BIT 6 E [Z01-]
            this.bit_n_r8(6, R8.E)
            break
        case 0x74: // BIT 6 H [Z01-]
            this.bit_n_r8(6, R8.H)
            break
        case 0x75: // BIT 6 L [Z01-]
            this.bit_n_r8(6, R8.L)
            break
        case 0x76: // BIT 6 (HL) [Z01-]
            this.bit_n_valHL(6)
            break
        case 0x77: // BIT 6 A [Z01-]
            this.bit_n_r8(6, R8.A)
            break

        case 0x78: // BIT 7 B [Z01-]
            this.bit_n_r8(7, R8.B)
            break
        case 0x79: // BIT 7 C [Z01-]
            this.bit_n_r8(7, R8.C)
            break
        case 0x7a: // BIT 7 D [Z01-]
            this.bit_n_r8(7, R8.D)
            break
        case 0x7b: // BIT 7 E [Z01-]
            this.bit_n_r8(7, R8.E)
            break
        case 0x7c: // BIT 7 H [Z01-]
            this.bit_n_r8(7, R8.H)
            break
        case 0x7d: // BIT 7 L [Z01-]
            this.bit_n_r8(7, R8.L)
            break
        case 0x7e: // BIT 7 (HL) [Z01-]
            this.bit_n_valHL(7)
            break
        case 0x7f: // BIT 7 A [Z01-]
            this.bit_n_r8(7, R8.A)
            break



        case 0x80: // RES 0 B [----]
            this.res_n_r8(0, R8.B)
            break
        case 0x81: // RES 0 C [----]
            this.res_n_r8(0, R8.C)
            break
        case 0x82: // RES 0 D [----]
            this.res_n_r8(0, R8.D)
            break
        case 0x83: // RES 0 E [----]
            this.res_n_r8(0, R8.E)
            break
        case 0x84: // RES 0 H [----]
            this.res_n_r8(0, R8.H)
            break
        case 0x85: // RES 0 L [----]
            this.res_n_r8(0, R8.L)
            break
        case 0x86: // RES 0 (HL) [----]
            this.res_n_valHL(0)
            break
        case 0x87: // RES 0 A [----]
            this.res_n_r8(0, R8.A)
            break

        case 0x88: // RES 1 B [----]
            this.res_n_r8(1, R8.B)
            break
        case 0x89: // RES 1 C [----]
            this.res_n_r8(1, R8.C)
            break
        case 0x8a: // RES 1 D [----]
            this.res_n_r8(1, R8.D)
            break
        case 0x8b: // RES 1 E [----]
            this.res_n_r8(1, R8.E)
            break
        case 0x8c: // RES 1 H [----]
            this.res_n_r8(1, R8.H)
            break
        case 0x8d: // RES 1 L [----]
            this.res_n_r8(1, R8.L)
            break
        case 0x8e: // RES 1 (HL) [----]
            this.res_n_valHL(1)
            break
        case 0x8f: // RES 1 A [----]
            this.res_n_r8(1, R8.A)
            break



        case 0x90: // RES 2 B [----]
            this.res_n_r8(2, R8.B)
            break
        case 0x91: // RES 2 C [----]
            this.res_n_r8(2, R8.C)
            break
        case 0x92: // RES 2 D [----]
            this.res_n_r8(2, R8.D)
            break
        case 0x93: // RES 2 E [----]
            this.res_n_r8(2, R8.E)
            break
        case 0x94: // RES 2 H [----]
            this.res_n_r8(2, R8.H)
            break
        case 0x95: // RES 2 L [----]
            this.res_n_r8(2, R8.L)
            break
        case 0x96: // RES 2 (HL) [----]
            this.res_n_valHL(2)
            break
        case 0x97: // RES 2 A [----]
            this.res_n_r8(2, R8.A)
            break

        case 0x98: // RES 3 B [----]
            this.res_n_r8(3, R8.B)
            break
        case 0x99: // RES 3 C [----]
            this.res_n_r8(3, R8.C)
            break
        case 0x9a: // RES 3 D [----]
            this.res_n_r8(3, R8.D)
            break
        case 0x9b: // RES 3 E [----]
            this.res_n_r8(3, R8.E)
            break
        case 0x9c: // RES 3 H [----]
            this.res_n_r8(3, R8.H)
            break
        case 0x9d: // RES 3 L [----]
            this.res_n_r8(3, R8.L)
            break
        case 0x9e: // RES 3 (HL) [----]
            this.res_n_valHL(3)
            break
        case 0x9f: // RES 3 A [----]
            this.res_n_r8(3, R8.A)
            break



        case 0xa0: // RES 4 B [----]
            this.res_n_r8(4, R8.B)
            break
        case 0xa1: // RES 4 C [----]
            this.res_n_r8(4, R8.C)
            break
        case 0xa2: // RES 4 D [----]
            this.res_n_r8(4, R8.D)
            break
        case 0xa3: // RES 4 E [----]
            this.res_n_r8(4, R8.E)
            break
        case 0xa4: // RES 4 H [----]
            this.res_n_r8(4, R8.H)
            break
        case 0xa5: // RES 4 L [----]
            this.res_n_r8(4, R8.L)
            break
        case 0xa6: // RES 4 (HL) [----]
            this.res_n_valHL(4)
            break
        case 0xa7: // RES 4 A [----]
            this.res_n_r8(4, R8.A)
            break

        case 0xa8: // RES 5 B [----]
            this.res_n_r8(5, R8.B)
            break
        case 0xa9: // RES 5 C [----]
            this.res_n_r8(5, R8.C)
            break
        case 0xaa: // RES 5 D [----]
            this.res_n_r8(5, R8.D)
            break
        case 0xab: // RES 5 E [----]
            this.res_n_r8(5, R8.E)
            break
        case 0xac: // RES 5 H [----]
            this.res_n_r8(5, R8.H)
            break
        case 0xad: // RES 5 L [----]
            this.res_n_r8(5, R8.L)
            break
        case 0xae: // RES 5 (HL) [----]
            this.res_n_valHL(5)
            break
        case 0xaf: // RES 5 A [----]
            this.res_n_r8(5, R8.A)
            break



        case 0xb0: // RES 6 B [----]
            this.res_n_r8(6, R8.B)
            break
        case 0xb1: // RES 6 C [----]
            this.res_n_r8(6, R8.C)
            break
        case 0xb2: // RES 6 D [----]
            this.res_n_r8(6, R8.D)
            break
        case 0xb3: // RES 6 E [----]
            this.res_n_r8(6, R8.E)
            break
        case 0xb4: // RES 6 H [----]
            this.res_n_r8(6, R8.H)
            break
        case 0xb5: // RES 6 L [----]
            this.res_n_r8(6, R8.L)
            break
        case 0xb6: // RES 6 (HL) [----]
            this.res_n_valHL(6)
            break
        case 0xb7: // RES 6 A [----]
            this.res_n_r8(6, R8.A)
            break

        case 0xb8: // RES 7 B [----]
            this.res_n_r8(7, R8.B)
            break
        case 0xb9: // RES 7 C [----]
            this.res_n_r8(7, R8.C)
            break
        case 0xba: // RES 7 D [----]
            this.res_n_r8(7, R8.D)
            break
        case 0xbb: // RES 7 E [----]
            this.res_n_r8(7, R8.E)
            break
        case 0xbc: // RES 7 H [----]
            this.res_n_r8(7, R8.H)
            break
        case 0xbd: // RES 7 L [----]
            this.res_n_r8(7, R8.L)
            break
        case 0xbe: // RES 7 (HL) [----]
            this.res_n_valHL(7)
            break
        case 0xbf: // RES 7 A [----]
            this.res_n_r8(7, R8.A)
            break



        case 0xc0: // SET 0 B [----]
            this.set_n_r8(0, R8.B)
            break
        case 0xc1: // SET 0 C [----]
            this.set_n_r8(0, R8.C)
            break
        case 0xc2: // SET 0 D [----]
            this.set_n_r8(0, R8.D)
            break
        case 0xc3: // SET 0 E [----]
            this.set_n_r8(0, R8.E)
            break
        case 0xc4: // SET 0 H [----]
            this.set_n_r8(0, R8.H)
            break
        case 0xc5: // SET 0 L [----]
            this.set_n_r8(0, R8.L)
            break
        case 0xc6: // SET 0 (HL) [----]
            this.set_n_valHL(0)
            break
        case 0xc7: // SET 0 A [----]
            this.set_n_r8(0, R8.A)
            break

        case 0xc8: // SET 1 B [----]
            this.set_n_r8(1, R8.B)
            break
        case 0xc9: // SET 1 C [----]
            this.set_n_r8(1, R8.C)
            break
        case 0xca: // SET 1 D [----]
            this.set_n_r8(1, R8.D)
            break
        case 0xcb: // SET 1 E [----]
            this.set_n_r8(1, R8.E)
            break
        case 0xcc: // SET 1 H [----]
            this.set_n_r8(1, R8.H)
            break
        case 0xcd: // SET 1 L [----]
            this.set_n_r8(1, R8.L)
            break
        case 0xce: // SET 1 (HL) [----]
            this.set_n_valHL(1)
            break
        case 0xcf: // SET 1 A [----]
            this.set_n_r8(1, R8.A)
            break



        case 0xd0: // SET 2 B [----]
            this.set_n_r8(2, R8.B)
            break
        case 0xd1: // SET 2 C [----]
            this.set_n_r8(2, R8.C)
            break
        case 0xd2: // SET 2 D [----]
            this.set_n_r8(2, R8.D)
            break
        case 0xd3: // SET 2 E [----]
            this.set_n_r8(2, R8.E)
            break
        case 0xd4: // SET 2 H [----]
            this.set_n_r8(2, R8.H)
            break
        case 0xd5: // SET 2 L [----]
            this.set_n_r8(2, R8.L)
            break
        case 0xd6: // SET 2 (HL) [----]
            this.set_n_valHL(2)
            break
        case 0xd7: // SET 2 A [----]
            this.set_n_r8(2, R8.A)
            break

        case 0xd8: // SET 3 B [----]
            this.set_n_r8(3, R8.B)
            break
        case 0xd9: // SET 3 C [----]
            this.set_n_r8(3, R8.C)
            break
        case 0xda: // SET 3 D [----]
            this.set_n_r8(3, R8.D)
            break
        case 0xdb: // SET 3 E [----]
            this.set_n_r8(3, R8.E)
            break
        case 0xdc: // SET 3 H [----]
            this.set_n_r8(3, R8.H)
            break
        case 0xdd: // SET 3 L [----]
            this.set_n_r8(3, R8.L)
            break
        case 0xde: // SET 3 (HL) [----]
            this.set_n_valHL(3)
            break
        case 0xdf: // SET 3 A [----]
            this.set_n_r8(3, R8.A)
            break



        case 0xe0: // SET 4 B [----]
            this.set_n_r8(4, R8.B)
            break
        case 0xe1: // SET 4 C [----]
            this.set_n_r8(4, R8.C)
            break
        case 0xe2: // SET 4 D [----]
            this.set_n_r8(4, R8.D)
            break
        case 0xe3: // SET 4 E [----]
            this.set_n_r8(4, R8.E)
            break
        case 0xe4: // SET 4 H [----]
            this.set_n_r8(4, R8.H)
            break
        case 0xe5: // SET 4 L [----]
            this.set_n_r8(4, R8.L)
            break
        case 0xe6: // SET 4 (HL) [----]
            this.set_n_valHL(4)
            break
        case 0xe7: // SET 4 A [----]
            this.set_n_r8(4, R8.A)
            break

        case 0xe8: // SET 5 B [----]
            this.set_n_r8(5, R8.B)
            break
        case 0xe9: // SET 5 C [----]
            this.set_n_r8(5, R8.C)
            break
        case 0xea: // SET 5 D [----]
            this.set_n_r8(5, R8.D)
            break
        case 0xeb: // SET 5 E [----]
            this.set_n_r8(5, R8.E)
            break
        case 0xec: // SET 5 H [----]
            this.set_n_r8(5, R8.H)
            break
        case 0xed: // SET 5 L [----]
            this.set_n_r8(5, R8.L)
            break
        case 0xee: // SET 5 (HL) [----]
            this.set_n_valHL(5)
            break
        case 0xef: // SET 5 A [----]
            this.set_n_r8(5, R8.A)
            break



        case 0xf0: // SET 6 B [----]
            this.set_n_r8(6, R8.B)
            break
        case 0xf1: // SET 6 C [----]
            this.set_n_r8(6, R8.C)
            break
        case 0xf2: // SET 6 D [----]
            this.set_n_r8(6, R8.D)
            break
        case 0xf3: // SET 6 E [----]
            this.set_n_r8(6, R8.E)
            break
        case 0xf4: // SET 6 H [----]
            this.set_n_r8(6, R8.H)
            break
        case 0xf5: // SET 6 L [----]
            this.set_n_r8(6, R8.L)
            break
        case 0xf6: // SET 6 (HL) [----]
            this.set_n_valHL(6)
            break
        case 0xf7: // SET 6 A [----]
            this.set_n_r8(6, R8.A)
            break

        case 0xf8: // SET 7 B [----]
            this.set_n_r8(7, R8.B)
            break
        case 0xf9: // SET 7 C [----]
            this.set_n_r8(7, R8.C)
            break
        case 0xfa: // SET 7 D [----]
            this.set_n_r8(7, R8.D)
            break
        case 0xfb: // SET 7 E [----]
            this.set_n_r8(7, R8.E)
            break
        case 0xfc: // SET 7 H [----]
            this.set_n_r8(7, R8.H)
            break
        case 0xfd: // SET 7 L [----]
            this.set_n_r8(7, R8.L)
            break
        case 0xfe: // SET 7 (HL) [----]
            this.set_n_valHL(7)
            break
        case 0xff: // SET 7 A [----]
            this.set_n_r8(7, R8.A)
            break



    }
}
